<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
<!-- 2019-08-07 Wed 18:15 -->
<meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<title>Quiz (Week 2)</title>
<meta name="generator" content="Org mode" />
<meta name="author" content="Liam O'Connor" />
<style type="text/css">
 <!--/*--><![CDATA[/*><!--*/
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #ccc;
    box-shadow: 3px 3px 3px #eee;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: visible;
    padding-top: 1.2em;
  }
  pre.src:before {
    display: none;
    position: absolute;
    background-color: white;
    top: -10px;
    right: 10px;
    padding: 3px;
    border: 1px solid black;
  }
  pre.src:hover:before { display: inline;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { width: 90%; }
  /*]]>*/-->
</style>
<link rel='stylesheet' type='text/css' href='https://www.cse.unsw.edu.au/~cs3141/19t2/statics/bundle.css'/><link rel='alternate' type='application/rss+xml'
                                       href='https://www.cse.unsw.edu.au/~cs3141/19t2/index.xml' title='RSS for announcements'><script src='https://www.cse.unsw.edu.au/~cs3141/19t2/statics/bundle.js' type='text/javascript' ></script><script src='https://www.cse.unsw.edu.au/~cs3141/19t2/statics/collapses.js' type='text/javascript' ></script>
                                       <meta http-equiv='Content-Type' content='text/html;charset=UTF-8' />
<script type="text/javascript">
/*
@licstart  The following is the entire license notice for the
JavaScript code in this tag.

Copyright (C) 2012-2017 Free Software Foundation, Inc.

The JavaScript code in this tag is free software: you can
redistribute it and/or modify it under the terms of the GNU
General Public License (GNU GPL) as published by the Free Software
Foundation, either version 3 of the License, or (at your option)
any later version.  The code is distributed WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.

As additional permission under GNU GPL version 3 section 7, you
may distribute non-source (e.g., minimized or compacted) forms of
that code without the copy of the GNU GPL normally required by
section 4, provided you include this license notice and a URL
through which recipients can access the Corresponding Source.


@licend  The above is the entire license notice
for the JavaScript code in this tag.
*/
<!--/*--><![CDATA[/*><!--*/
 function CodeHighlightOn(elem, id)
 {
   var target = document.getElementById(id);
   if(null != target) {
     elem.cacheClassElem = elem.className;
     elem.cacheClassTarget = target.className;
     target.className = "code-highlighted";
     elem.className   = "code-highlighted";
   }
 }
 function CodeHighlightOff(elem, id)
 {
   var target = document.getElementById(id);
   if(elem.cacheClassElem)
     elem.className = elem.cacheClassElem;
   if(elem.cacheClassTarget)
     target.className = elem.cacheClassTarget;
 }
/*]]>*///-->
</script>
</head>
<body>
<div id="preamble" class="status">
<img src="http://www.cse.unsw.edu.au/~cs3141/19t2/statics/title.png" alt="COMP3141 Software System Design and Implementation"
     style="position:absolute; left:0px; top:0px; z-index:-1;max-width:800px;width:100%;"/>
<p style="text-align:center; font-weight:bold; display:block;">Software System Design and Implementation</p>
<small style="text-align:center; display:block;">Term 2, 2019</small>
<hr/>
<ul class="org-ul collapsibleList">
<li><a href="../index.html">Announcements</a></li>
<li><a href="../outline.html">Course Outline</a></li>
<li><a href="../Lectures.html">Course Schedule</a></li>
<li><a href="https://cgi.cse.unsw.edu.au/~cs3141/cgi-bin/gal/19t2/gallery">Gallery</a></li>
<li><a href="https://moodle.telt.unsw.edu.au/course/view.php?id=40872">Moodle - Recordings</a></li>
<li><a href="https://piazza.com/class/jw3no041p794do">Piazza Forum</a></li>
<li><a href="../HaskellSetup.html">Setting up Haskell</a></li>
<li>Assignment 1
<ul class="org-ul collapsibleList">
<li><a href="../Assignment 1/code.html">Code </a></li>
<li><a href="../Assignment 1/Spec.pdf">Spec</a></li>
</ul></li>
<li>Assignment 2
<ul class="org-ul collapsibleList">
<li><a href="../Assignment 2/code.html">Code </a></li>
<li><a href="../Assignment 2/Spec.pdf">Spec</a></li>
</ul></li>
<li>Exam
<ul class="org-ul collapsibleList">
<li><a href="../Exam/Sample Exam.pdf">Sample Exam</a></li>
<li><a href="../Exam/Sample Solutions.pdf">Sample Solutions</a></li>
</ul></li>
<li>Week 1
<ul class="org-ul collapsibleList">
<li><a href="../Week 01/Quiz.html">Quiz </a></li>
<li>Tuesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 01/1Tue/Code.html">Code </a></li>
<li><a href="../Week 01/1Tue/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 01/1Tue/Slides.pdf">Slides</a></li>
</ul></li>
<li>Wednesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 01/2Wed/Code.html">Code </a></li>
<li><a href="../Week 01/2Wed/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 01/2Wed/Slides.pdf">Slides</a></li>
</ul></li>
</ul></li>
<li>Week 2
<ul class="org-ul collapsibleList">
<li><a href="../Week 02/exercise.html">Exercise </a></li>
<li><a href="../Week 02/quiz.html">Quiz </a></li>
<li>Tuesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 02/1Tue/Board.pdf">Board</a></li>
<li><a href="../Week 02/1Tue/Code.html">Code </a></li>
<li><a href="../Week 02/1Tue/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 02/1Tue/Slides.pdf">Slides</a></li>
</ul></li>
<li>Wednesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 02/2Wed/Board.pdf">Board</a></li>
<li><a href="../Week 02/2Wed/Code.html">Code </a></li>
<li><a href="../Week 02/2Wed/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 02/2Wed/Slides.pdf">Slides</a></li>
</ul></li>
</ul></li>
<li>Week 3
<ul class="org-ul collapsibleList">
<li><a href="../Week 03/exercise.html">Exercise </a></li>
<li><a href="../Week 03/quiz.html">Quiz </a></li>
<li>Tuesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 03/1Tue/Code.html">Code </a></li>
<li><a href="../Week 03/1Tue/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 03/1Tue/Slides.pdf">Slides</a></li>
</ul></li>
<li>Wednesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 03/2Wed/Code.html">Code </a></li>
<li><a href="../Week 03/2Wed/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 03/2Wed/Slides.pdf">Slides</a></li>
</ul></li>
</ul></li>
<li>Week 4
<ul class="org-ul collapsibleList">
<li><a href="../Week 04/exercise.html">Exercise </a></li>
<li><a href="../Week 04/quiz.html">Quiz </a></li>
<li>Tuesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 04/1Tue/code.html">Code </a></li>
<li><a href="../Week 04/1Tue/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 04/1Tue/Slides.pdf">Slides</a></li>
</ul></li>
<li>Wednesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 04/2Wed/Code.html">Code </a></li>
<li><a href="../Week 04/2Wed/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 04/2Wed/Slides.pdf">Slides</a></li>
</ul></li>
</ul></li>
<li>Week 6
<ul class="org-ul collapsibleList">
<li><a href="../Week 06/exercise.html">Exercise </a></li>
<li><a href="../Week 06/quiz.html">Quiz </a></li>
<li>Tuesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 06/1Tue/Code.html">Code </a></li>
<li><a href="../Week 06/1Tue/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 06/1Tue/Slides.pdf">Slides</a></li>
</ul></li>
<li>Wednesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 06/2Wed/Code.html">Code </a></li>
<li><a href="../Week 06/2Wed/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 06/2Wed/Slides.pdf">Slides</a></li>
</ul></li>
</ul></li>
<li>Week 7
<ul class="org-ul collapsibleList">
<li><a href="../Week 07/notes.html">Additional Reading </a></li>
<li><a href="../Week 07/exercise.html">Exercise </a></li>
<li><a href="../Week 07/quiz.html">Quiz </a></li>
<li>Tuesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 07/1Tue/Code.html">Code </a></li>
<li><a href="../Week 07/1Tue/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 07/1Tue/Slides.pdf">Slides</a></li>
</ul></li>
<li>Wednesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 07/2Wed/code.html">Code </a></li>
<li><a href="../Week 07/2Wed/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 07/2Wed/Slides.pdf">Slides</a></li>
</ul></li>
</ul></li>
<li>Week 8
<ul class="org-ul collapsibleList">
<li><a href="../Week 08/exercise.html">Exercise </a></li>
<li><a href="../Week 08/quiz.html">Quiz </a></li>
<li>Tuesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 08/1Tue/Code.html">Code </a></li>
<li><a href="../Week 08/1Tue/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 08/1Tue/Slides.pdf">Slides</a></li>
</ul></li>
<li>Wednesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 08/2Wed/Code.html">Code </a></li>
<li><a href="../Week 08/2Wed/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 08/2Wed/Slides.pdf">Slides</a></li>
</ul></li>
</ul></li>
<li>Week 9
<ul class="org-ul collapsibleList">
<li><a href="../Week 09/quiz.html">Quiz </a></li>
<li>Tuesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 09/1Tue/Board.pdf">Board</a></li>
<li><a href="../Week 09/1Tue/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 09/1Tue/Slides.pdf">Slides</a></li>
</ul></li>
<li>Wednesday
<ul class="org-ul collapsibleList">
<li><a href="../Week 09/2Wed/Code.html">Code </a></li>
<li><a href="../Week 09/2Wed/Condensed Slides.pdf">Condensed Slides</a></li>
<li><a href="../Week 09/2Wed/Slides.pdf">Slides</a></li>
</ul></li>
</ul></li>
<li>Week 10
<ul class="org-ul collapsibleList">
<li><a href="../Week 10/Guest Slides.pdf">Guest Slides</a></li>
</ul></li>
</ul>
<script type='text/javascript'>CollapsibleLists.apply();</script>
</div>
<div id="content">
<h1 class="title">Quiz (Week 2)</h1>

<div id="outline-container-org20cec3c" class="outline-2">
<h2 id="org20cec3c"><span class="section-number-2">1</span> Types and Constructors</h2>
<div class="outline-text-2" id="text-1">
<p>
Consider the following type definitions.
</p>

<div class="org-src-container">
<pre class="src src-haskell"><span class="org-keyword">type</span> <span class="org-type">B</span> <span class="org-variable-name">=</span> <span class="org-type">Bool</span>
<span class="org-keyword">data</span> <span class="org-type">X</span> <span class="org-variable-name">=</span> <span class="org-type">A</span> <span class="org-type">X</span>
       <span class="org-variable-name">|</span> <span class="org-type">B</span> <span class="org-type">B</span>
       <span class="org-variable-name">|</span> <span class="org-type">C</span> <span class="org-type">Y</span>
<span class="org-keyword">newtype</span> <span class="org-type">Y</span> <span class="org-variable-name">=</span> <span class="org-type">Y</span> <span class="org-type">B</span>
</pre>
</div>
</div>

<div id="outline-container-org1860440" class="outline-3">
<h3 id="org1860440"><span class="section-number-3">1.1</span> Question 1</h3>
<div class="outline-text-3" id="text-1-1">
<p>
Which of the following can identifiers
can stand for <i>types</i> in the above definitions? Check all that apply.
</p>

<div class="CHECK">
<ol class="org-ol">
<li><span class='mark mark_incorrect'>✗</span><code class="src src-haskell"><span class="org-type">A</span></code></li>
<li><span class='mark mark_correct'>✔</span><code class="src src-haskell"><span class="org-type">B</span></code></li>
<li><span class='mark mark_incorrect'>✗</span><code class="src src-haskell"><span class="org-type">C</span></code></li>
<li><span class='mark mark_correct'>✔</span><code class="src src-haskell"><span class="org-type">X</span></code></li>
<li><span class='mark mark_correct'>✔</span><code class="src src-haskell"><span class="org-type">Y</span></code></li>
</ol>

</div>
<div class="NOTES">
<p>
The three types defined are <code class="src src-haskell"><span class="org-type">B</span></code>,
<code class="src src-haskell"><span class="org-type">X</span></code>, and <code class="src src-haskell"><span class="org-type">Y</span></code>.
</p>

</div>

</div>
</div>
<div id="outline-container-org8b8e0f3" class="outline-3">
<h3 id="org8b8e0f3"><span class="section-number-3">1.2</span> Question 2</h3>
<div class="outline-text-3" id="text-1-2">
<p>
Which of the following identifiers can stand for <i>constructors</i>
in the above definitions? Check all that apply.
</p>
<div class="CHECK">
<ol class="org-ol">
<li><span class='mark mark_correct'>✔</span><code class="src src-haskell"><span class="org-type">A</span></code></li>
<li><span class='mark mark_correct'>✔</span><code class="src src-haskell"><span class="org-type">B</span></code></li>
<li><span class='mark mark_correct'>✔</span><code class="src src-haskell"><span class="org-type">C</span></code></li>
<li><span class='mark mark_incorrect'>✗</span><code class="src src-haskell"><span class="org-type">X</span></code></li>
<li><span class='mark mark_correct'>✔</span><code class="src src-haskell"><span class="org-type">Y</span></code></li>
</ol>

</div>
<div class="NOTES">
<p>
The type <code class="src src-haskell"><span class="org-type">X</span></code> introduces three constructors,
<code class="src src-haskell"><span class="org-type">A</span></code>, <code class="src src-haskell"><span class="org-type">B</span></code>
and <code class="src src-haskell"><span class="org-type">C</span></code>, and the newtype definition
defines a constructor <code class="src src-haskell"><span class="org-type">Y</span></code>.
</p>

</div>

</div>
</div>
</div>

<div id="outline-container-org31a9560" class="outline-2">
<h2 id="org31a9560"><span class="section-number-2">2</span> Types in Design</h2>
<div class="outline-text-2" id="text-2">
<p>
For each of the following use cases, choose the type
definitions that best reflect
this use case, eliminating as many possible errors or invalid
values as possible.
</p>
</div>

<div id="outline-container-org611cee5" class="outline-3">
<h3 id="org611cee5"><span class="section-number-3">2.1</span> Question 3</h3>
<div class="outline-text-3" id="text-2-1">
<blockquote>
<p>
A connection is in one of three states: <i>connected</i>, <i>connecting</i> or
<i>disconnected</i>. It also contains the following information:
</p>
<ul class="org-ul">
<li>The destination IP address</li>
<li>If it is in the <i>disconnected</i> state, the time it disconnected.</li>
<li>If it is in the <i>connected</i> state, the arrival time of the most recent packet,
if one exists.</li>
<li>If it is in the <i>connected</i> state, the size of the most recent packet, if one exists.</li>
<li>If it is in the <i>connecting</i> state, the time the connection was initiated.</li>
</ul>
</blockquote>

<div class="MULTI">
<ol class="org-ol">
<li><span class='mark mark_incorrect'>✗</span><div class="org-src-container">
<pre class="src src-haskell"><span class="org-keyword">data</span> <span class="org-type">State</span> <span class="org-variable-name">=</span> <span class="org-type">Connected</span> <span class="org-variable-name">|</span> <span class="org-type">Connecting</span> <span class="org-variable-name">|</span> <span class="org-type">Disconnected</span>

<span class="org-keyword">data</span> <span class="org-type">Connection</span>
  <span class="org-variable-name">=</span> <span class="org-type">Connection</span>
      { destination      <span class="org-variable-name">::</span> <span class="org-type">IPAddress</span>
      , state            <span class="org-variable-name">::</span> <span class="org-type">State</span>
      , timeDisconnected <span class="org-variable-name">::</span> <span class="org-type">Maybe</span> <span class="org-type">Time</span>
      , timeInitiated    <span class="org-variable-name">::</span> <span class="org-type">Maybe</span> <span class="org-type">Time</span>
      , packetArrival    <span class="org-variable-name">::</span> <span class="org-type">Maybe</span> <span class="org-type">Time</span>
      , packetSize       <span class="org-variable-name">::</span> <span class="org-type">Maybe</span> <span class="org-type">Size</span>
      }
</pre>
</div></li>
<li><span class='mark mark_incorrect'>✗</span><div class="org-src-container">
<pre class="src src-haskell"><span class="org-keyword">data</span> <span class="org-type">State</span>
  <span class="org-variable-name">=</span> <span class="org-type">Connected</span>    { packetArrival <span class="org-variable-name">::</span> <span class="org-type">Maybe</span> <span class="org-type">Time</span>
                 , packetSize    <span class="org-variable-name">::</span> <span class="org-type">Maybe</span> <span class="org-type">Size</span>
                 }
  <span class="org-variable-name">|</span> <span class="org-type">Connecting</span>   { timeInitiated    <span class="org-variable-name">::</span> <span class="org-type">Time</span> }
  <span class="org-variable-name">|</span> <span class="org-type">Disconnected</span> { timeDisconnected <span class="org-variable-name">::</span> <span class="org-type">Time</span> }

<span class="org-keyword">data</span> <span class="org-type">Connection</span>
  <span class="org-variable-name">=</span> <span class="org-type">Connection</span>
      { destination <span class="org-variable-name">::</span> <span class="org-type">IPAddress</span>
      , state       <span class="org-variable-name">::</span> <span class="org-type">State</span>
      }
</pre>
</div></li>
<li><span class='mark mark_incorrect'>✗</span><div class="org-src-container">
<pre class="src src-haskell"><span class="org-keyword">data</span> <span class="org-type">State</span> <span class="org-variable-name">=</span> <span class="org-type">Connected</span> <span class="org-variable-name">|</span> <span class="org-type">Connecting</span> <span class="org-variable-name">|</span> <span class="org-type">Disconnected</span>

<span class="org-keyword">data</span> <span class="org-type">Connection</span>
  <span class="org-variable-name">=</span> <span class="org-type">Connection</span>
      { destination      <span class="org-variable-name">::</span> <span class="org-type">IPAddress</span>
      , state            <span class="org-variable-name">::</span> <span class="org-type">State</span>
      , timeDisconnected <span class="org-variable-name">::</span> <span class="org-type">Maybe</span> <span class="org-type">Time</span>
      , timeInitiated    <span class="org-variable-name">::</span> <span class="org-type">Maybe</span> <span class="org-type">Time</span>
      , recentPacket     <span class="org-variable-name">::</span> <span class="org-type">Maybe</span> (<span class="org-type">Time</span>, <span class="org-type">Size</span>)
      }
</pre>
</div></li>
<li><span class='mark mark_correct'>✔</span><div class="org-src-container">
<pre class="src src-haskell"><span class="org-keyword">data</span> <span class="org-type">State</span>
  <span class="org-variable-name">=</span> <span class="org-type">Connected</span>    { recentPacket     <span class="org-variable-name">::</span> <span class="org-type">Maybe</span> (<span class="org-type">Time</span>, <span class="org-type">Size</span>) }
  <span class="org-variable-name">|</span> <span class="org-type">Connecting</span>   { timeInitiated    <span class="org-variable-name">::</span> <span class="org-type">Time</span> }
  <span class="org-variable-name">|</span> <span class="org-type">Disconnected</span> { timeDisconnected <span class="org-variable-name">::</span> <span class="org-type">Time</span> }

<span class="org-keyword">data</span> <span class="org-type">Connection</span>
  <span class="org-variable-name">=</span> <span class="org-type">Connection</span>
      { destination <span class="org-variable-name">::</span> <span class="org-type">IPAddress</span>
      , state       <span class="org-variable-name">::</span> <span class="org-type">State</span>
      }
</pre>
</div></li>
</ol>

</div>
<div class="NOTES">
<p>
The first answer is very unstructured, as it does not enforce
the relationship between the state the connection is in and the
data that should be present in the connection. For example, this means
that it's possible to have a connection in the disconnected state,
but without a timestamp. It also allows a packet arrival time
to be present <i>without</i> a size, which is not possible.
</p>

<p>
The second answer does enforce the relationship between data
and state, but does not fix the problem with the packet size and time.
</p>

<p>
The third answer does fix the problem with the packet size and time,
but does not fix the relationship between data and state.
</p>

<p>
The fourth answer is therefore correct.
</p>

</div>

</div>
</div>
<div id="outline-container-org74a01c6" class="outline-3">
<h3 id="org74a01c6"><span class="section-number-3">2.2</span> Question 4</h3>
<div class="outline-text-3" id="text-2-2">
<blockquote>
<p>
A message is encrypted using a password. The system will not allow
messages to be encrypted with weak passwords. Messages can only
be logged if encrypted.
</p>
</blockquote>
<div class="MULTI">
<ol class="org-ol">
<li><span class='mark mark_incorrect'>✗</span><div class="org-src-container">
<pre class="src src-haskell"><span class="org-function-name">checkStrength</span> <span class="org-variable-name">::</span> <span class="org-type">String</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Bool</span>
<span class="org-function-name">encrypt</span>       <span class="org-variable-name">::</span> <span class="org-type">String</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">String</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">String</span>
<span class="org-function-name">log</span>           <span class="org-variable-name">::</span> <span class="org-type">String</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Log</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Log</span>
</pre>
</div></li>
<li><span class='mark mark_incorrect'>✗</span><div class="org-src-container">
<pre class="src src-haskell"><span class="org-keyword">newtype</span> <span class="org-type">Encrypted</span> <span class="org-variable-name">=</span> <span class="org-type">E</span> <span class="org-type">String</span>
<span class="org-function-name">checkStrength</span> <span class="org-variable-name">::</span> <span class="org-type">String</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Bool</span>
<span class="org-function-name">encrypt</span>       <span class="org-variable-name">::</span> <span class="org-type">String</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">String</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Encrypted</span>
<span class="org-function-name">log</span>           <span class="org-variable-name">::</span> <span class="org-type">Encrypted</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Log</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Log</span>
</pre>
</div></li>
<li><span class='mark mark_correct'>✔</span><div class="org-src-container">
<pre class="src src-haskell"><span class="org-keyword">newtype</span> <span class="org-type">Password</span>  <span class="org-variable-name">=</span> <span class="org-type">P</span> <span class="org-type">String</span>
<span class="org-keyword">newtype</span> <span class="org-type">Encrypted</span> <span class="org-variable-name">=</span> <span class="org-type">E</span> <span class="org-type">String</span>
<span class="org-function-name">checkStrength</span> <span class="org-variable-name">::</span> <span class="org-type">String</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Maybe</span> <span class="org-type">Password</span>
<span class="org-function-name">encrypt</span>       <span class="org-variable-name">::</span> <span class="org-type">String</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Password</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Encrypted</span>
<span class="org-function-name">log</span>           <span class="org-variable-name">::</span> <span class="org-type">Encrypted</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Log</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Log</span>
</pre>
</div></li>
<li><span class='mark mark_incorrect'>✗</span><div class="org-src-container">
<pre class="src src-haskell"><span class="org-keyword">newtype</span> <span class="org-type">Password</span>  <span class="org-variable-name">=</span> <span class="org-type">P</span> <span class="org-type">String</span>
<span class="org-function-name">checkStrength</span> <span class="org-variable-name">::</span> <span class="org-type">String</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Maybe</span> <span class="org-type">Password</span>
<span class="org-function-name">encrypt</span>       <span class="org-variable-name">::</span> <span class="org-type">String</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Password</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">String</span>
<span class="org-function-name">log</span>           <span class="org-variable-name">::</span> <span class="org-type">String</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Log</span> <span class="org-variable-name">-&gt;</span> <span class="org-type">Log</span>
</pre>
</div></li>
</ol>

</div>
<div class="NOTES">
<p>
There are three requirements:
</p>
<ol class="org-ol">
<li>We must prevent the password and message parameters to <code>encrypt</code>
from being swapped.</li>
<li>We must not allow an unchecked password to be used for encryption.</li>
<li>We must not allow unencrypted messages to be logged.</li>
</ol>

<p>
The first answer doesn't meet any requirements. The second
meets the third requirement only. The third is correct. The last one
meets only the first and second requirements.
</p>

</div>

</div>
</div>
</div>


<div id="outline-container-org92b179f" class="outline-2">
<h2 id="org92b179f"><span class="section-number-2">3</span> Monoids and Semigroups</h2>
<div class="outline-text-2" id="text-3">
</div>
<div id="outline-container-orgb56520b" class="outline-3">
<h3 id="orgb56520b"><span class="section-number-3">3.1</span> Question 5</h3>
<div class="outline-text-3" id="text-3-1">
<p>
Which of the following <code class="src src-haskell"><span class="org-type">Semigroup</span></code>
instances are <i>lawful</i>?
</p>

<div class="CHECK">
<ol class="org-ol">
<li><span class='mark mark_incorrect'>✗</span><div class="org-src-container">
<pre class="src src-haskell"><span class="org-keyword">newtype</span> <span class="org-type">X</span> <span class="org-variable-name">=</span> <span class="org-type">X</span> <span class="org-type">Bool</span>
<span class="org-keyword">instance</span> <span class="org-type">Semigroup</span> <span class="org-type">X</span> <span class="org-keyword">where</span>
  <span class="org-type">X</span> a <span class="org-variable-name">&lt;&gt;</span> <span class="org-type">X</span> b <span class="org-variable-name">=</span> <span class="org-type">X</span> (not a <span class="org-variable-name">||</span> b)
</pre>
</div></li>
<li><span class='mark mark_correct'>✔</span><div class="org-src-container">
<pre class="src src-haskell"><span class="org-keyword">newtype</span> <span class="org-type">X</span> <span class="org-variable-name">=</span> <span class="org-type">X</span> <span class="org-type">Bool</span>
<span class="org-keyword">instance</span> <span class="org-type">Semigroup</span> <span class="org-type">X</span> <span class="org-keyword">where</span>
  <span class="org-type">X</span> a <span class="org-variable-name">&lt;&gt;</span> <span class="org-type">X</span> b <span class="org-variable-name">=</span> <span class="org-type">X</span> (a <span class="org-variable-name">||</span> b)
</pre>
</div></li>
<li><span class='mark mark_correct'>✔</span><div class="org-src-container">
<pre class="src src-haskell"><span class="org-keyword">newtype</span> <span class="org-type">X</span> <span class="org-variable-name">=</span> <span class="org-type">X</span> <span class="org-type">Bool</span>
<span class="org-keyword">instance</span> <span class="org-type">Semigroup</span> <span class="org-type">X</span> <span class="org-keyword">where</span>
  <span class="org-type">X</span> a <span class="org-variable-name">&lt;&gt;</span> <span class="org-type">X</span> b <span class="org-variable-name">=</span> <span class="org-type">X</span> (a <span class="org-variable-name">`xor`</span> b)
    <span class="org-keyword">where</span> xor <span class="org-type">True</span>  x <span class="org-variable-name">=</span> not x
          xor <span class="org-type">False</span> x <span class="org-variable-name">=</span> x
</pre>
</div></li>
<li><span class='mark mark_correct'>✔</span><div class="org-src-container">
<pre class="src src-haskell"><span class="org-keyword">newtype</span> <span class="org-type">X</span> <span class="org-variable-name">=</span> <span class="org-type">X</span> <span class="org-type">Bool</span>
<span class="org-keyword">instance</span> <span class="org-type">Semigroup</span> <span class="org-type">X</span> <span class="org-keyword">where</span>
  <span class="org-type">X</span> a <span class="org-variable-name">&lt;&gt;</span> <span class="org-type">X</span> b <span class="org-variable-name">=</span> <span class="org-type">X</span> a
</pre>
</div></li>
</ol>

</div>
<div class="NOTES">
<p>
The only operation that is not associative is the first one (implication)
</p>

</div>

</div>
</div>

<div id="outline-container-org1ef505e" class="outline-3">
<h3 id="org1ef505e"><span class="section-number-3">3.2</span> Question 6</h3>
<div class="outline-text-3" id="text-3-2">
<p>
Which of the following is a valid <i>monoid</i>?
</p>
<div class="CHECK">
<ol class="org-ol">
<li><span class='mark mark_incorrect'>✗</span>The type <code>Integer</code>, the <code>max</code> function and identity element <code>0</code></li>
<li><span class='mark mark_incorrect'>✗</span>The type <code>Bool</code>, the <code>(&amp;&amp;)</code> function and identity element <code>False</code></li>
<li><span class='mark mark_correct'>✔</span>The type <code>Bool</code>, the <code>(&amp;&amp;)</code> function and identity element <code>True</code></li>
<li><span class='mark mark_incorrect'>✗</span>The type <code>Integer</code>, the function
<code class="src src-haskell">(<span class="org-variable-name">\</span>a b <span class="org-variable-name">-&gt;</span> (a <span class="org-variable-name">+</span> b) <span class="org-variable-name">`div`</span> 2)</code>, and identity element <code>0</code>.</li>
</ol>

</div>
<div class="NOTES">
<p>
The first answer is not a monoid because <code>0</code> is not an identity element for <code>max</code>. For
example <code class="src src-haskell"><span class="org-function-name">max</span> (<span class="org-variable-name">-</span>1) 0 <span class="org-variable-name">==</span> 0</code>.
</p>

<p>
The second answer is not a monoid because <code>False</code> is not an identity element for
<code>(&amp;&amp;)</code>, as <code class="src src-haskell">a <span class="org-function-name">&amp;&amp;</span> <span class="org-type">False</span> <span class="org-variable-name">==</span> <span class="org-type">False</span></code> for all <code>a</code>.
</p>

<p>
The third answer is a monoid, as <code>(&amp;&amp;)</code> is associative and <code>True</code> is its
identity.
</p>

<p>
The last is not a monoid, because the given average function is not associative.
</p>

</div>

</div>
</div>
</div>
<div id="outline-container-org5377bb6" class="outline-2">
<h2 id="org5377bb6"><span class="section-number-2">4</span> Relations</h2>
<div class="outline-text-2" id="text-4">
</div>
<div id="outline-container-org3a3fab3" class="outline-3">
<h3 id="org3a3fab3"><span class="section-number-3">4.1</span> Question 7</h3>
<div class="outline-text-3" id="text-4-1">
<p>
Check all of the following that are valid <i>partial orders</i>.
</p>
<div class="CHECK">
<ol class="org-ol">
<li><span class='mark mark_correct'>✔</span><code class="src src-haskell">(<span class="org-function-name">==</span>)</code></li>
<li><span class='mark mark_incorrect'>✗</span><code class="src src-haskell"><span class="org-variable-name">\</span>x y <span class="org-variable-name">-&gt;</span> x <span class="org-variable-name">`mod`</span> y <span class="org-variable-name">==</span> 0</code></li>
<li><span class='mark mark_correct'>✔</span><code class="src src-haskell">(<span class="org-function-name">&gt;=</span>)</code></li>
<li><span class='mark mark_incorrect'>✗</span><code class="src src-haskell">(<span class="org-function-name">/=</span>)</code></li>
</ol>

</div>
<div class="NOTES">
<p>
Equality is a partial order, as is <code>&gt;=</code>.
That is because they satisfy reflexivity, transitivity and antisymmetry.
Divisibility is a partial order for positive naturals, but not for any type in Haskell, as it's not defined for zero and therefore not reflexive.
Non-equality is not reflexive, transitive nor antisymmetric.
</p>

</div>

</div>
</div>

<div id="outline-container-org0735296" class="outline-3">
<h3 id="org0735296"><span class="section-number-3">4.2</span> Question 8</h3>
<div class="outline-text-3" id="text-4-2">
<p>
Check all of the following that are valid <i>equivalence relations</i>.
</p>
<div class="CHECK">
<ol class="org-ol">
<li><span class='mark mark_correct'>✔</span><code class="src src-haskell">(<span class="org-function-name">==</span>)</code></li>
<li><span class='mark mark_correct'>✔</span><code class="src src-haskell"><span class="org-variable-name">\</span>x y <span class="org-variable-name">-&gt;</span> x <span class="org-variable-name">`mod`</span> 10 <span class="org-variable-name">==</span> y <span class="org-variable-name">`mod`</span> 10 </code></li>
<li><span class='mark mark_incorrect'>✗</span><code class="src src-haskell">(<span class="org-function-name">&gt;=</span>)</code></li>
<li><span class='mark mark_incorrect'>✗</span><code class="src src-haskell">(<span class="org-function-name">/=</span>)</code></li>
</ol>

</div>
<div class="NOTES">
<p>
Equality is an equivalence relation, as is congruence mod 10.
That is because they satisfy reflexivity, transitivity and symmetry.
The ordering <code>&gt;=</code> is not symmetric, and inequality is not reflexive or
transitive either.
</p>

</div>

</div>
</div>
</div>
<div class='submission_box'> Submission is already closed for this quiz. You can click <a href='https://cgi.cse.unsw.edu.au/~cs3141/cgi-bin/gal/19t2/submit_quiz?quizname=quiz03'>here</a> to check your submission (if any). </div></div>
<div id="postamble" class="status">
<p class='date'> 2019-08-07 Wed 18:15 </p><small><a type='application/rss+xml' href='https://www.cse.unsw.edu.au/~cs3141/19t2/index.xml'>Announcements RSS</a></small>
</div>
</body>
</html>
